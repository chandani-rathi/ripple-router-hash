import { effect, track } from "ripple";
import { RoutesContext, useRouterState } from "@/state.ripple"
import { findRoute } from "../lib/utils"

export component Link(props) {
  const { children, to, query } = props;
  // const { state, routes, navigateTo } = useRouterState();
  const context = RoutesContext.get();


	async function onClick(e) {
		e.preventDefault();
    if(!to) return;
		// window.location.hash = '#' + to;
    const router = context.get("router");
    router.navigate(to, query)
	}

  async function onMouseOver(e) {
    if(!to) return;
    const routes = context.get("routes")
    if(routes) {
      const foundRoute = findRoute(to,  routes);
    
      if(foundRoute?.layouts?.length > 0) {
        foundRoute.layouts.forEach(l => l.import());
      }

      if(!foundRoute?.component) return;

      foundRoute.component();
    }
    
  }

	<a class={props["class"]} href={to} onClick={onClick} onMouseOver={onMouseOver} ><children /></a>

}

export function useRouter() {
  const context = RoutesContext.get();

  function navigateTo(to, query) {
    const router = context.get("router");
    router.navigate(to, query)
  }

  return {
    navigateTo
  }
}