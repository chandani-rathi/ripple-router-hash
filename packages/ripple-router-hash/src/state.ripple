import { createContext, effect, track } from "ripple";
import { HashRouter } from "./lib/hash-router";

export const RoutesContext = createContext(new Map<string, any>());

export function useRouterState() {
    console.log("event useRouterState");
    const context = RoutesContext.get();
    
    const routes = track<HashRouter>(() => {
        return context.get("routes")
    });

    const state = track(() => {
        const router: HashRouter = context.get("router");
        return router.lastState;
    });

    const navigateTo = (path: string, query: { [name: string]: string} ) => {
        const router: HashRouter = context.get("router");
        router.navigate(path, query);
    };

    effect(() => {
        const router: HashRouter = context.get("router");
        router.addEvent(updateState);
    })

    
    function onStateChange(newState){
        console.log("newState", newState)
    }

    function updateState(newState){
        @state = newState;
    }

    effect(() => {
        console.log("mounted hash state");
        onStateChange(@state);
        // return () => {
        //     console.log("un mounted hash state")
        // }
    })

    return { state, routes, navigateTo };

}